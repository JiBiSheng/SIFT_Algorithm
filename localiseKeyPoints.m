function [ keypoints ] = localiseKeyPoints( descriptorDoG, img )

    contrastLimit = 0.03;
    isKeypoint = false; 
	keypointsMap = cell(size(descriptorDoG,1), size(descriptorDoG{1},4)-2);
	counter = 0;

    
%% localise extrema with top-mid-bottom layers    
for octave = 1:size(descriptorDoG,1)
	for layer = 2:(size(descriptorDoG{octave},4)-1)
        keypointsMap{octave,layer-1} = zeros(size(descriptorDoG{octave},1), size(descriptorDoG{octave},2));
        for r = 2:size(descriptorDoG{octave},1)-1
            for c = 2:size(descriptorDoG{octave},2)-1   
                isKeypoint = false; 
%                 pixel_centre = descriptorDoG{octave}(r,c,1,layer);
%                 maxValue = pixel_centre;
%                 minValue = pixel_centre;
%                 for offsetRow=-1:1
%                     for offsetCol=-1:1
%                         for offsetLayer= -1:1
%                             if maxValue > descriptorDoG{octave}(r+offsetRow,c+offsetCol,1,layer+offsetLayer)
%                             else
%                                 maxValue = descriptorDoG{octave}(r+offsetRow,c+offsetCol,1,layer+offsetLayer);
%                             end
%                             if minValue < descriptorDoG{octave}(r+offsetRow,c+offsetCol,1,layer+offsetLayer)
%                             else
%                                 minValue = descriptorDoG{octave}(r+offsetRow,c+offsetCol,1,layer+offsetLayer);
%                             end
%                         end
%                     end
%                 end
%                 if pixel_centre == maxValue || pixel_centre == minValue
%                     if(keypointsMap{octave,layer-1}(r,c) == 0)
%                         keypointsMap{octave,layer-1}(r,c) = 1; 
%                         counter = counter + 1; 
%                         isKeypoint = true; 
%                     end                     
%                 end

                    %%%% faster checker compared with above %%%%
					if descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r-1,c,1,layer) && ...
                        descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r-1,c-1,1,layer) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r,c-1,1,layer) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r+1,c-1,1,layer) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r+1,c,1,layer) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r+1,c+1,1,layer) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r,c+1,1,layer) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r-1,c+1,1,layer) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r-1,c,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r-1,c-1,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r,c-1,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r+1,c-1,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r+1,c,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r+1,c+1,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r,c+1,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r-1,c+1,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r,c,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r-1,c,1,layer+1) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r-1,c-1,1,layer+1) && ... 
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r,c-1,1,layer+1) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r+1,c-1,1,layer+1) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r+1,c,1,layer+1) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r+1,c+1,1,layer+1) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r,c+1,1,layer+1) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r-1,c+1,1,layer+1) && ...
						descriptorDoG{octave}(r,c,1,layer) > descriptorDoG{octave}(r,c,1,layer+1)
                    
                        if(keypointsMap{octave,layer-1}(r,c) == 0)
                            keypointsMap{octave,layer-1}(r,c) = 1; 
                            counter = counter + 1; 
                            isKeypoint = true; 
                        end 
                    end
                    

					%checks if it is minima 
					if descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r-1,c,1,layer) && ...
                        descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r-1,c-1,1,layer) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r,c-1,1,layer) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r+1,c-1,1,layer) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r+1,c,1,layer) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r+1,c+1,1,layer) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r,c+1,1,layer) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r-1,c+1,1,layer) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r-1,c,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r-1,c-1,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r,c-1,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r+1,c-1,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r+1,c,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r+1,c+1,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r,c+1,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r-1,c+1,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r,c,1,layer-1) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r-1,c,1,layer+1) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r-1,c-1,1,layer+1) && ... 
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r,c-1,1,layer+1) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r+1,c-1,1,layer+1) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r+1,c,1,layer+1) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r+1,c+1,1,layer+1) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r,c+1,1,layer+1) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r-1,c+1,1,layer+1) && ...
						descriptorDoG{octave}(r,c,1,layer) < descriptorDoG{octave}(r,c,1,layer+1)
                    
                        if(keypointsMap{octave,layer-1}(r,c) == 0)
                            keypointsMap{octave,layer-1}(r,c) = 1; 
        					counter = counter + 1; 
                            isKeypoint = true; 
                        end 
                    end 

                if isKeypoint == true                    
                    if(abs(descriptorDoG{octave}(r,c,1,layer))<contrastLimit)
                        keypointsMap{octave,layer-1}(r,c) = 0; 
                        isKeypoint = false; 
                        counter = counter - 1; 
                    end              
                end
                
                if isKeypoint == true
                    DerivativeYY = (descriptorDoG{octave}(r-1,c,1,layer) + ...
                        descriptorDoG{octave}(r+1, c, 1, layer) - ...
                        2.0*descriptorDoG{octave}(r, c, 1, layer));     
                    
                    DerivativeXX = (descriptorDoG{octave}(r,c-1,1,layer) + ...
                        descriptorDoG{octave}(r, c+1, 1, layer) - ...
                        2.0*descriptorDoG{octave}(r, c, 1, layer));

                    DerivativeXY = (descriptorDoG{octave}(r-1,c-1,1,layer) + ...
                        descriptorDoG{octave}(r+1,c+1,1,layer) - ...
                        descriptorDoG{octave}(r+1, c-1, 1, layer) - ...
                        descriptorDoG{octave}(r-1, c+1, 1, layer))/4;
                    trTerm = DerivativeXX + DerivativeYY;
                    DeterminantH = DerivativeXX * DerivativeYY - DerivativeXY*DerivativeXY; 
                    
                    ratio = (trTerm*trTerm)/DeterminantH;
                    
                    threshold = ((5+1)^2)/5;
                    if(ratio>=threshold || DeterminantH<0)
                        keypointsMap{octave,layer-1}(r,c) = 0;
                        isKeypoint = false;
                        counter = counter -1;
                    end
                end
            end
        end
	end
end
    
    
    withPointsImage = img; 

    tempVal = cell(4,1); 
    tempVal{1} = keypointsMap;
    tempVal{2} = withPointsImage;
    tempVal{3} = descriptorDoG;
    tempVal{4} = counter;

    keypoints = tempVal; 
        

  
    
    
end

